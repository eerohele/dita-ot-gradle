plugins {
    id 'groovy'
    id 'codenarc'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'de.undercouch.download' version '4.0.1'
    id 'se.patrikerdes.use-latest-versions' version '0.2.13'
    id 'com.github.ben-manes.versions' version '0.27.0'
}

sourceCompatibility = 1.8

defaultTasks 'check'

dependencies {
    implementation localGroovy()
    implementation 'commons-io:commons-io:2.6'

    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude module: 'groovy-all'
    }

    testImplementation 'junit:junit:4.13-rc-1'
    testCompile('org.jsoup:jsoup:1.12.1')
}

repositories {
    jcenter()
}

codenarc {
    toolVersion = '1.0'
    configFile = file('config/codenarc/codenarc.groovy')
}

def ditaOtVersion = '3.4'

task downloadDitaOt(type: Download) {
    src "https://github.com/dita-ot/dita-ot/releases/download/${ditaOtVersion}/dita-ot-${ditaOtVersion}.zip"
    dest new File(buildDir, "dita-ot-${ditaOtVersion}.zip")
    overwrite false
}

task extractDitaOt(dependsOn: downloadDitaOt, type: Copy) {
    from zipTree(downloadDitaOt.dest)
    into buildDir
}

task installDitaOt(dependsOn: [extractDitaOt])

test {
    dependsOn installDitaOt
    systemProperty 'dita.home', System.getProperty('dita.home', "${buildDir}/dita-ot-${ditaOtVersion}")
    systemProperty 'examples.dir', new File(projectDir, 'examples')

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

group = 'com.github.eerohele'
version = '0.6.0-beta6'

pluginBundle {
    website = 'https://github.com/eerohele/dita-ot-gradle'
    vcsUrl = 'https://github.com/eerohele/dita-ot-gradle.git'
    tags = ['dita', 'dita-ot', 'documentation']
}

gradlePlugin {
    plugins {
        ditaOt {
            id = 'com.github.eerohele.dita-ot-gradle'
            displayName = 'DITA-OT Gradle Plugin'
            implementationClass = 'com.github.eerohele.DitaOtPlugin'
            description = 'A Gradle plugin for running DITA Open Toolkit'
        }
    }
}
